let axios = require('axios')
let fs = require('fs')
let rates = {
	'USD_AUD': {
		val: '1.42'
	}
}
try {
	file = fs.readFileSync(__dirname+'/rates.json')
	if(!(file instanceof Buffer) && (file instanceof Object)){
		rates = file
	}
} catch(err){
	console.error(err)
}
let ccapi = require('secrets').ccapi

async function updateRates(args){
	// return new Promise((resolve,reject)=>{

	// })
	let currencyPairs = [
		'USD_AUD'
	] || args.currencyPairs
	for await(var currencyPair of currencyPairs){
		let rate = await axios({
			method: 'get',
			url: ccapi.url,
			params: {
				q: currencyPair,
				apiKey: ccapi.key
			}
		})
		.catch(console.error)
		if(rate){
			rates[currencyPair] = rate.data.results[currencyPair]
		}
	}
	fs.writeFileSync(__dirname+'/rates.json', JSON.stringify(rates))
	return rates
}
module.exports = async function(args){
	if(global && !global.ratesInterval){
		global.ratesInterval = setInterval(()=>{
			updateRates(args)
		}, 1000*60*5)
		await updateRates(args)
	}
	return rates
}