let uuid = require('uuid/v4')
let functions = require('experiences')
let Uri = functions['uri.js']
let smarts = require('smarts')()

let thing = function (args){
	var args = args || {}
	var mdb = {
		mongoose: args.mongoose || require('mongoose'),
		uri: Uri(
			args.config
		),
		schemas: {
			thingosphere: args.schemas,
			mongoose: [],
		},
		models: {
			mongoose: []
		},
		metaSchemaToMongoose,
		test
	}
	mdb.connection = mdb.mongoose.createConnection(
		mdb.uri,
		{
			useNewUrlParser: true
		}
	)
	if(mdb.schemas.thingosphere){
		let keys = Object.keys(mdb.schemas.thingosphere)

		keys.forEach(key=>{
			mdb.metaSchemaToMongoose({schema: mdb.schemas.thingosphere[key].schema, mdb})
		})
	}
	return mdb
}

let metaSchemaToMongoose = function(args){
	if(args.schema && args.schema.schema){
		let schema = {}
		args.schema.schema.properties.forEach(property=>{
			schema[property.path] = property.mongoose.schema
		})
		if(schema){
			if(!args.mdb.models.mongoose[args.schema.schema.path]){
				let s = new args.mdb.mongoose.Schema(schema)
				args.mdb.schemas.mongoose.push(s)
				let m = args.mdb.connection.model(args.schema.schema.path, s)
				args.mdb.schemas.mongoose[args.schema.schema.path] = s
				args.mdb.models.mongoose[args.schema.schema.path] = m
			}
		}
	}
}
// model test
let test = function(args){
	var test = new mdb.models['thing']({
		title: 'hey',
		price: 'nine ninety nine',
		thumbnail: 'lol.jpg'
	})

	test
	.save(err=>{
		if(err) {
			console.error(err)
		}
	})
}

module.exports = thing
